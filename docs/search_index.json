[["solutions-dimensionality-reduction.html", "B Solutions ch. 2 - Dimensionality reduction B.1 Exercise 2.5. B.2 Exercise 2.6.", " B Solutions ch. 2 - Dimensionality reduction Solutions to exercises of chapter 3. B.1 Exercise 2.5. Read in the corresponding spreadsheet into the R environment as a data frame variable. library(tidyverse) set.seed(12345) sc_rna &lt;- read_csv(file = &quot;data/PGC_transcriptomics/PGC_transcriptomics.csv&quot;) metadata &lt;- sc_rna %&gt;% slice( 1:4) %&gt;% pivot_longer( cols=-Sample, names_to = &#39;cell_type&#39;, values_to = &#39;index&#39;) %&gt;% pivot_wider( names_from = Sample, values_from = index) %&gt;% mutate(group=str_remove(cell_type, &#39;_.*$&#39;)) %&gt;% mutate_if( is.numeric, as.factor) sc_rna_fil &lt;- sc_rna %&gt;% slice(-c(1:4)) %&gt;% column_to_rownames(var=&#39;Sample&#39;) %&gt;% as.matrix() genenames &lt;- rownames(sc_rna_fil) cell_type &lt;- colnames(sc_rna_fil) We can run tSNE using the following command: library(Rtsne) set.seed(1) tsne_model_1 = Rtsne(as.matrix(t(sc_rna_fil)), check_duplicates=FALSE, pca=TRUE, perplexity=100, theta=0.5, dims=2) As we did previously, we can plot the results using: sc_2d_data &lt;- tsne_model_1$Y %&gt;% as.data.frame() %&gt;% rename( x=V1,y=V2) %&gt;% mutate(cell_type = cell_type ) %&gt;% mutate( cell_group = str_remove(cell_type, &#39;_.*$&#39;)) ggplot(data=sc_2d_data) + geom_point( mapping=aes(x=x,y=y, color=cell_group), alpha=0.5) + scale_x_continuous(limits = c(-20,20)) + scale_y_continuous(limits = c(-20,20)) + theme_classic() B.2 Exercise 2.6. We can plot the expression patterns for pre-implantation embryos: sc_2d_preimp &lt;- inner_join(sc_2d_data, metadata, by=&#39;cell_type&#39;) %&gt;% filter(cell_group == &#39;preimp&#39;) %&gt;% mutate( preimp_type = recode(as.character(Time), &#39;0&#39; = &#39;Ooc&#39;, &#39;1&#39; = &#39;Zyg&#39;, &#39;2&#39; = &#39;2C&#39;, &#39;3&#39; = &#39;4C&#39;, &#39;4&#39; = &#39;8C&#39;, &#39;5&#39; = &#39;Mor&#39;, &#39;6&#39; = &#39;Blast&#39;)) ggplot(data=sc_2d_preimp) + geom_point( mapping = aes(x=x, y=y, color=preimp_type), alpha=0.3) + scale_x_continuous(limits = c(-10,10)) + scale_y_continuous(limits = c(-10,10)) + theme_classic() "]]
